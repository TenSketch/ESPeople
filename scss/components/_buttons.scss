@use '../abstracts/variables' as *;

// Mixin to handle button states with color inversion
@mixin btn-state($color) {
  &:hover {
    background-color: $color !important;
    color: invert($color) !important;
  }

  &:focus-visible {
    box-shadow: none;
    background-color: $color !important;
    border-color: $color !important;
    color: invert($color) !important;
  }

  &:active {
    background-color: $color !important;
    border-color: $color !important;
    color: invert($color) !important;
  }
}

// Base button styles
.btn {
  padding: 0.8em 1.3em;
  // margin: 1rem;
}

// Primary button
.btn-primary {
  background-color: $primary-clr;
  border-color: $primary-clr;
  color: $white;

  @include btn-state($primary-clr); // Pass the primary color to the mixin
}

// Outline Primary button
.btn-outline-primary {
  background-color: transparent;
  color: $primary-clr;
  border-color: $primary-clr;

  @include btn-state($primary-clr); // Use the primary color for inversion
}

// Secondary button
.btn-secondary {
  background-color: $secondary-clr;
  border-color: $secondary-clr;
  color: $white;

  @include btn-state($secondary-clr); // Pass the secondary color to the mixin
}

// Outline Secondary button
.btn-outline-secondary {
  background-color: transparent;
  color: $secondary-clr;
  border-color: transparent;

  @include btn-state($secondary-clr); // Use the secondary color for inversion
}

// .btn-light
.btn-light {
  background-color: $light-clr;
  border-color: $light-clr;
  color: $dark-clr;
  @include btn-state($light-clr);
}